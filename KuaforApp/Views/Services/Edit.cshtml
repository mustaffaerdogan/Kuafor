@model KuaforApp.Models.Service

@{
    ViewData["Title"] = "Hizmet Düzenle";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h2 class="text-center mb-0">@ViewData["Title"]</h2>
                </div>
                <div class="card-body">
                    <form asp-action="Edit" id="editServiceForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="ServiceID" />
                        <input type="hidden" asp-for="CreatedAt" />

                        <div class="form-group mb-3">
                            <label asp-for="SalonID" class="form-label"></label>
                            <select asp-for="SalonID" class="form-select" asp-items="ViewBag.SalonID">
                                <option value="">-- Salon Seçiniz --</option>
                            </select>
                            <span asp-validation-for="SalonID" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="ServiceName" class="form-label"></label>
                            <input asp-for="ServiceName" class="form-control" placeholder="Hizmet adını giriniz" />
                            <span asp-validation-for="ServiceName" class="text-danger"></span>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Duration" class="form-label"></label>
                                    <input asp-for="Duration" type="number" min="1" class="form-control" placeholder="Süreyi dakika olarak giriniz" />
                                    <span asp-validation-for="Duration" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label asp-for="Price" class="form-label"></label>
                                    <div class="input-group">
                                        <input asp-for="Price" type="number" step="0.01" min="0" class="form-control" placeholder="0.00" />
                                        <span class="input-group-text">TL</span>
                                    </div>
                                    <span asp-validation-for="Price" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Description" class="form-label"></label>
                            <textarea asp-for="Description" class="form-control" rows="3" placeholder="Hizmet açıklaması giriniz"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="form-group text-center">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-save"></i> Kaydet
                            </button>
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="bi bi-arrow-left"></i> Listeye Dön
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {
            // Handle price input validation and formatting
            $("#Price").on("input", function () {
                let value = $(this).val();
                
                // Remove any non-numeric characters except decimal point
                value = value.replace(/[^\d.]/g, '');
                
                // Ensure only one decimal point
                const decimalCount = (value.match(/\./g) || []).length;
                if (decimalCount > 1) {
                    value = value.replace(/\.+$/, '');
                }
                
                // Limit to two decimal places
                if (value.includes('.')) {
                    const parts = value.split('.');
                    if (parts[1].length > 2) {
                        parts[1] = parts[1].substring(0, 2);
                        value = parts.join('.');
                    }
                }
                
                $(this).val(value);
            });

            // Format price on form submission
            $("#editServiceForm").on("submit", function (e) {
                const priceInput = $("#Price");
                const value = parseFloat(priceInput.val());
                
                if (isNaN(value) || value < 0) {
                    e.preventDefault();
                    alert("Lütfen geçerli bir fiyat giriniz.");
                    priceInput.focus();
                    return false;
                }
                
                // Set the value with exactly two decimal places
                priceInput.val(value.toFixed(2));
            });
        });
    </script>
} 